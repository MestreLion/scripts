#!/usr/bin/env bash
# Copyright (C) 2021 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
# License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
#
# Create a new profile named after USER, titled
# Enable 256 colors (not needed anymore)
# Enable transparency
# Increase rows and columns
# Unlimited scroll
#
# Up to Ubuntu 12.04 (v3.4.11): gconf
# v3.8 onwards: dconf/gsettings
#
# for gsettings: https://wiki.gnome.org/Apps/Terminal/FAQ
#
# -----------------------------------------------------------------------------

DESCRIPTION='Gnome Terminal profile and preferences'
ARGS='[COLS] [ROWS]'

setuplib=${SETUP_LIB_PATH:-"$(dirname "$(readlink -f "$0")")"/../setuplib}
if [[ -r "$setuplib" ]]; then source "$setuplib"; else
	echo "Setup library not found: $setuplib" >&2; exit 1;
fi

include dconf

# -----------------------------------------------------------------------------

cols=${1:-${SETUP_GNOME_TERMINAL_COLS:-180}}; integer "$cols" "COLS"
rows=${2:-${SETUP_GNOME_TERMINAL_ROWS:-60}};  integer "$rows" "ROWS"

# -----------------------------------------------------------------------------

user=${USER,,}
user=${user^}

required=3.8
version=$(gnome-terminal --version | awk '{print $4}')

version_greater "$version" "$required" ||
	fatal "Gnome Terminal version $version still uses GConf" \
		" which is no longer supported. Version $required or above is required."

name=${1:-$user}
path='/org/gnome/terminal/legacy/profiles:/'
profiles= profile= puid= pname= sep=

# Loop the profiles list to find a profile by name
while IFS= read -r puid; do
	# Get the Profile visible-name
	# Could also use `gsettings get schema:path/puid key`,
	# but `dconf read path/puid/key` is easier as it doesn't require schema
	pname=$(dconf read "${path}${puid}visible-name")
	if [[ "'${name}'" != "$pname" ]]; then continue; fi
	profile=$puid
	break
done < <(dconf list "$path" | awk '/^:/{print}')
# For the specific case of Gnome Terminal, it also mantains the same list
# above in org.gnome.Terminal.ProfilesList, accesible via `gsettings get`.
# But for the general case, `dconf list` is the only method.

# If it's a new profile, add to the list
if [[ "$profile" ]]; then
	message "Update Gnome Terminal profile: $name (${profile:1:-1})"
else
	profile=":$(uuidgen)/"
	message "Create Gnome Terminal profile: $name (${profile:1:-1})"
	profiles=$(dconf read "${path}list")
	if [[ "${profiles: -2}" == "']" ]]; then sep=', '; fi
	dconf write "${path}list" "${profiles::-1}${sep}'${profile:1:-1}']"
fi

# Customize its settings
# Created with: dconf dump "${path}${profile}" | sort
dconf load "${path}${profile}" < <(sed -Ez 's/\n +//g' <<-EOF
	[/]
	background-transparency-percent=12
	default-size-columns=${cols}
	default-size-rows=${rows}
	scrollback-unlimited=true
	use-theme-transparency=false
	use-transparent-background=true
	visible-name='${name}'
	EOF
)

# Set as the default profile
dconf write "${path}default" "'${profile:1:-1}'"
