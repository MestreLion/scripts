#!/bin/bash
#
# progname - short desciption
#
#    Copyright (C) 2020 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. See <http://www.gnu.org/licenses/gpl.html>
#
# Long description
# ... that may span over multiple lines
#------------------------------------------------------------------------------
#!/bin/bash
#
# progname - short desciption
#
# Copyright (C) 2020 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
# License: GPLv3 or later, at your choice. See <http://www.gnu.org/licenses/gpl>
#------------------------------------------------------------------------------

set -Eeuo pipefail  # exit on any error
trap '>&2 echo "error: line $LINENO, status $?: $BASH_COMMAND"' ERR

#------------------------------------------------------------------------------

verbose=0

#------------------------------------------------------------------------------

myname="${0##*/}"
mydir=$(dirname "$(readlink -f "$0")")

#------------------------------------------------------------------------------

bold()    { tput bold; printf '%s' "$@"; tput sgr0; }
red()     { tput setaf 1; bold "$@"; }
green()   { tput setaf 2; bold "$@"; }
fatal()   { if (($#)); then { red "$@"; echo; } >&2; fi; exit 1; }
message() { if (($# && verbose)); then green '* ' "$@"; echo; fi; }

fatal()   { if (($#)); then echo "$myname: error: $1" >&2; fi; exit ${2:-1}; }
fatal()   { if (($#)); then echo "$myname: error: $@" >&2; fi; exit 1; }
message() { if (($# && verbose)); then printf '%s\n' "$@"; fi; }

argerr()  { printf "%s: %s\n" "$myname" "${1:-error}" >&2; usage 1; }
invalid() { argerr "invalid ${2:-option}: ${1:-}"; }
missing() { argerr "missing ${1:+$1 }argument${2:+ from $2}."; }

exists()  { type "$@" >/dev/null 2>&1; }
integer() { [[ "$1" ]] || missing "${3-NUM}" "${2:-}"; [[ "$1" != *[!0-9]* ]] ||
            argerr "'$1'${2:+ in $2} is not an integer."; }
numeric() { [[ "$1" ]] || missing "${3-NUM}" "${2:-}"; local re='^[0-9]+([.][0-9]+)?$'
            [[ "$1" =~ $re ]] || argerr "'${1:-}'${2:+ in $2} is not a number."; }
cmdpath() { type -P "$1"; }
ppath()   { printf '%q' "$@"; }
skip()    { i=${2:-$file}; message "skipping${i:+ $i}${1:+: $1}"; continue ; }
quit()    { message "Goodbye!"; exit; }

#------------------------------------------------------------------------------

usage() {
	if [[ "${1:-}" ]] ; then exec >&2; fi
	cat <<-USAGE
	Usage: $myname [options]
	USAGE
	if [[ "${1:-}" ]] ; then
		cat <<- USAGE
		Try '$myname --help' for more information.
		USAGE
		exit 1
	fi
	cat <<-USAGE

	Short description

	Options:
	  -h|--help     - show this page.
	  -v|--verbose  - print more details about what is being done.

	Copyright (C) 2020 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
	License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
	USAGE
	exit 0
}

files=()
for arg in "$@"; do [[ "$arg" == "-h" || "$arg" == "--help" ]] && usage ; done
while (( $# )); do
	case "$1" in
	-v|--verbose  ) verbose=1                      ;;
	--var=*       ) var="${1#*=}"                  ;;
	--var         ) shift ; var="${1:-}"           ;;
	--            ) shift ; break                  ;;
	-*            ) invalid "$1"                   ;;
	-*            ) opts+=( "$1" )                 ;;
	*             ) argerr "$1"                    ;;
	*             ) files+=( "$1" )                ;;
	esac
	shift || break
done
files+=( "$@" )

#------------------------------------------------------------------------------

[[ "${var:-}" ]] || missing "ARG" "--var"

#------------------------------------------------------------------------------

echo "var=${var:-}"
((${#files[@]})) &&  echo "files: ${files[@]}"

tmpdir=$(mktemp --directory) || fatal "could not create temp dir"
trap 'rm -rf -- "$tmpdir"' EXIT
