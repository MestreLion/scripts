#!/bin/bash
#
# progname - short description
#
#    Copyright (C) 2023 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. See <http://www.gnu.org/licenses/gpl.html>
#
# Long description
# ... that may span over multiple lines
#------------------------------------------------------------------------------
#!/bin/bash
#
# progname - short description
#
# This file is part of [PROJNAME], see <https://github.com/MestreLion/[PROJTAG]>
# Copyright (C) 2023 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
# License: GPLv3 or later, at your choice. See <http://www.gnu.org/licenses/gpl>
#------------------------------------------------------------------------------

set -Eeuo pipefail  # exit on any error
trap '>&2 echo "error: line $LINENO, status $?: $BASH_COMMAND"' ERR

#------------------------------------------------------------------------------

verbose=0
opt=default

#------------------------------------------------------------------------------

self=${0##*/}
here=$(dirname "$(readlink -f "$0")")

#------------------------------------------------------------------------------

bold()    { tput bold; printf '%s' "$@"; tput sgr0; }
red()     { tput setaf 1; bold "$@"; }
green()   { tput setaf 2; bold "$@"; }
fatal()   { if (($#)); then { red "$@"; echo; } >&2; fi; exit 1; }
message() { if (($# && verbose)); then green '* ' "$@"; echo; fi; }

fatal()   { if (($#)); then echo "$self: error: $1" >&2; fi; exit "${2:-1}"; }
fatal()   { if (($#)); then echo "$self: error: $*" >&2; fi; exit 1; }
message() { if (($# && verbose)); then printf '%s\n' "$@"; fi; }

argerr()  { printf "%s: %s\n" "$self" "${1:-error}" >&2; usage 1; }
invalid() { argerr "invalid ${2:-option}: ${1:-}"; }
missing() { argerr "missing ${1:+$1 }argument${2:+ from $2}."; }

exists()  { type "$@" >/dev/null 2>&1; }
integer() { [[ "$1" ]] || missing "${3:-NUM}" "${2:-}"; [[ "$1" != *[!0-9]* ]] ||
            argerr "${2:+${3:-NUM} argument in $2 is }not an integer: $1"; }
numeric() { [[ "$1" ]] || missing "${3-NUM}" "${2:-}"; local re='^[0-9]+([.][0-9]+)?$'
            [[ "$1" =~ $re ]] || argerr "'${1:-}'${2:+ in $2} is not a number."; }
integer() { [[ "$1" ]] || missing "${3:-NUM}" "${2:-}"; [[ "$1" != *[!0-9]* ]] ||
            argerr "${2:+${3:-NUM} argument in $2 is }not an integer: $1"; }
sizefmt() { [[ "$1" ]] || missing "${3:-SIZE}" "${2:-}";
            numfmt --from=auto -- "$1" || fatal; }
si()      { numfmt --to=si --suffix 'B' "$@"; }
relpath() { python3 -c "import os,sys;print(os.path.relpath(*sys.argv[1:3]))" "$@"; }
cmdpath() { type -P "$1"; }
escape()  { printf '%q' "$@"; }  # perhaps change to $1, as $@ will not work as expected
# shellcheck disable=SC2104
skip()    { i=${2:-$file}; message "skipping${i:+ $i}${1:+: $1}"; continue ; }
quit()    { message "Goodbye!"; exit; }
require() {
	local cmd=$1
	local pkg=${2:-$cmd}
	local msg='' eol=''
	if exists "$cmd"; then return; fi
	if [[ -x /usr/lib/command-not-found ]]; then
		/usr/lib/command-not-found -- "$cmd" || true
		eol='\n'
	else
		echo "Required command '${cmd}' is not installed." >&2
		if [[ "$pkg" != '-' ]]; then
			msg="with:\n\tsudo apt install ${pkg}\n"
		fi
	fi
	echo -e "Please install ${cmd} ${msg}and try again.${eol}" >&2
	exit 1
}


#------------------------------------------------------------------------------

usage() {
	if [[ "${1:-}" ]] ; then exec >&2; fi
	cat <<-USAGE
	Usage: $self [options]
	USAGE
	if [[ "${1:-}" ]] ; then
		cat <<- USAGE
		Try '$self --help' for more information.
		USAGE
		exit 1
	fi
	cat <<-USAGE

	Short description

	Options:
	  -h|--help     - show this page.
	  -v|--verbose  - print more details about what is being done.

	Copyright (C) 2020 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
	License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
	USAGE
	exit 0
}

for arg in "$@"; do [[ "$arg" == "-h" || "$arg" == "--help" ]] && usage ; done

# Pre-parse for -h|--help, ignoring if after '--'
for arg in "$@"; do
	if [[ "$arg" == '--' ]]; then break; fi
	if [[ "$arg" == "-h" || "$arg" == "--help" ]]; then usage; fi
done
args=()
while (($#)); do
	# shellcheck disable=SC2221,SC2222
	case "$1" in
	-v|--verbose) verbose=1;;
	-o|--opt) shift; opt=${1:-};;
	--opt=*) opt=${1#*=};;
	--) shift; break;;
	-*) invalid "$1";;
	-*) opts+=( "$1" );;
	* ) argerr "$1";;
	* ) args+=( "$1" );;
	esac
	shift || break
done
args+=( "$@" )

case ${#args[@]} in
	0) missing ARG;;
	1) arg=${args[0]}; if [[ -z "$arg" ]]; then missing ARG; fi;;
	*) invalid "${args[1]}" argument;;
esac

#------------------------------------------------------------------------------

[[ "${opt:-}" ]] || missing "OPT" "--opt"
integer "${count:-}" '--count'
size=$(sizefmt "${size:-}" '--size') || exit

#------------------------------------------------------------------------------

echo "$self running from $here"
echo "opt=${opt:-}"
((${#opts[@]})) &&  echo "opts: " "${opts[@]}"
((${#args[@]})) &&  echo "args: " "${args[@]}"

tmpdir=$(mktemp --directory) || fatal "could not create temp dir"
trap 'rm -rf -- "$tmpdir"' EXIT
