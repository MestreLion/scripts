#!/bin/bash
#
# progname - short desciption
#
#    Copyright (C) 2012 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program. See <http://www.gnu.org/licenses/gpl.html>
#
# Long description
# ... that may span over multiple lines

myname="${0##*/}"
mydir=$(dirname "$(readlink -f "$0")")
verbose=0

dirs=()

fatal()   { [[ "$1" ]] && echo "$myname: error: $1" >&2 ; exit ${2:-1} ; }
message() { ((verbose)) && printf "%s\n" "$1"; }
argerr()  { printf "%s: %s\n" "$myname" "${1:-error}" >&2 ; usage 1 ; }
invalid() { argerr "invalid option: $1" ; }
missing() { argerr "missing${1:+ $1} argument." ; }
skip()    { i=${2:-$file}; message "skipping${i:+ $i}${1:+: $1}"; continue ; }
quit()    { message "Goodbye!" ; exit; }
relpath() { python -c "import os, sys; print os.path.relpath(*sys.argv[1:3])" "$@"; }


usage() {
	cat <<-USAGE
	Usage: $myname [options] DIR(S)...
	USAGE
	if [[ "$1" ]] ; then
		cat >&2 <<- USAGE
		Try '$myname --help' for more information.
		USAGE
		exit 1
	fi
	cat <<-USAGE

	Fix filenames cointaining colons (":"), which is an invalid character when
	dealing with NTFS partitions under Windows.

	Such files may be created either by Linux/NTFS-3g, which does not enforce
	filename restriction, or by Windows itself when accessing networks mount
	via NFS, a common scenario when sharing folders using VirtualBox.

	This solves problems related to unreadable files under Windows, and delete
	data supposed to be NFTS file Alternate Data Stream (ADS), such as
	Thumbs.db:encryptable

	Rules for deleting (or renaming) such files are:

	- Files containing a colon whose prefix (the part before the last colon)
	  is either blank (ie, file starts with ":") or matches an existing file
	  are considered to be streams, and are deleted.

	- Else, files are considered user-created (under Linux/NTFS-3g), and are
	  renamed: colons are replaced by either " -" or "-", depending if the
	  colon is followed by a space or not.

	- If the new name already exists and is a file, content is compared. If
	  identical, the "stream" file is considered a duplicate and deleted.

	- Otherwise, the existing name is backed up prior to rename, using
	  'mv --backup=numbered' rules.

	Options:
	  -h|--help     - show this page.
	  -v|--verbose  - print more details about what is being done.

	Copyright (C) 2013 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
	License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
	USAGE
	exit 0
}

# Option handling
for arg in "$@"; do [[ "$arg" == "-h" || "$arg" == "--help" ]] && usage ; done
while (( $# )); do
	case "$1" in
	-v|--verbose  ) verbose=1        ;;
	--            ) shift ; break    ;;
	-*            ) invalid "$1"     ;;
	*             ) dirs+=( "$1" )   ;;
	esac
	shift
done
dirs+=( "$@" )

[[ "$dirs" ]] || missing "DIR"

for dir in "${dirs[@]}"; do
	while read -r stream; do
		file="${stream%%:*}"

		# Stream of a file or directory (matches a file or is blank)
		if [[ -f "$stream" && ( -f "$file" || -z "$file" ) ]]; then
			message "Deleting stream $stream"
			rm "$stream"
			continue
		fi

		newname=${stream//: / - }
		newname=${newname//:/-}

		# Check if there is duplicate file with identical content
		if [[ -f "$newname" ]] && cmp --silent "$stream" "$newname"; then
			message "Deleting duplicate $stream"
			rm "$stream"
			continue
		fi

		message "Renaming \"$stream\" to \"$(basename "$newname")\""
		mv -T --backup=numbered "$stream" "$newname"

	done < <(find "$dir" -name "*:*")
done
