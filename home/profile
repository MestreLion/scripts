# Commands meant to run at every login
#
# To be sourced by ~/.profile
#
# To run, add these lines to ~/.profile:
#
#	export SCRIPTS="/path/to/scripts"
#	if [ -f "$SCRIPTS/home/profile" ] ; then
#	    . "$SCRIPTS/home/profile"
#	fi
#
# And edit "/path/to/scripts" to the proper path (by default ~/work/scripts)
# Dont forget to un-comment the lines too.
#
# Notes:
#
#  Bashisms are not allowed here, as /etc/gdm/Xession runs on sh (not bash!)
#  and sources ~/.profile at login.
#
#  SCRIPTS environment variable should be defined in ~/.profile instead of here.
#  respected here. If not, SCRIPTS will be set as either ~/work/scripts or
#  /home/dados/work/scripts, whichever exists.
#
##############################################################################

# Fallback only! Should be defined in ~/.profile instead.
export SCRIPTS=${SCRIPTS:-"$HOME"/work/scripts}

##############################################################################

snipfile(){ local n="{${3:-5},}" s; s="/^# *>$n *${2:-}/"; awk "$s,/<$n/&&!$s" "$1"; }

# Prepend folders to $PATH, avoiding duplicates
# Parameters: a single string, ':' separated, cointaining the folders to add
# This function breaks the string and check each folder to avoid duplicates
# Note that folders will be prepended in the *reverse* order
prepend_path() { add_path "$1" "${2:-}"   ; }
append_path()  { add_path "$1" "${2:-}" 1 ; }
add_path() {
	# $1 = a single path
	# $2 = force add even if path does not exist (but not dupe entries)
	# $3 = append or prepend
	local SAVED_IFS=$IFS
	local folder
	IFS=:
	for folder in ${1:-} ; do
		if [ -z "${2:-}" ] && ! [ -d "$folder" ] ; then
			continue
		fi
		if ! $( echo "$PATH" | tr ":" "\n" | grep -qx "$folder" ) ; then
			if [ "${3:-}" ] ; then
				PATH=$PATH:$folder
			else
				PATH=$folder:$PATH
			fi
		fi
	done
	IFS=$SAVED_IFS
}

##############################################################################

# Add bins paths to PATH
# /usr/local/games is already set in /etc/environment and /etc/login.defs
# ~/.local/bin is set afterwards in ~/.profile
prepend_path "$SCRIPTS"  add_non_dir

# Add some projects
append_path "$HOME/work/git-tools:$HOME/work/wine-tools:$HOME/work/xdg-tools"

export PATH

# Locales
export LANG="en_US.utf8"
export LANGUAGE="en_US:en"
export LC_ALL="en_US.utf8"
export LC_MESSAGES="en_US.utf8"
export LC_NUMERIC="pt_BR.utf8" # qt4 (and maybe others) unfortunately use this
export LC_TIME="pt_BR.utf8"
export LC_MONETARY="pt_BR.utf8"
export LC_PAPER="pt_BR.utf8"
export LC_MEASUREMENT="pt_BR.utf8"

# Thousand separator in ls, df and du filesizes
# could also use ls -l --block-size="'1" as alias (escaping the double-quotes)
export BLOCK_SIZE="'1"


# Man, Less, Colors -----------------------------------------------------------
# Enable native colors and colorize bold and underline
# https://felipec.wordpress.com/2021/06/05/adventures-with-man-color/

# Customized `less` pager for man, to help with colors and percentages
export MANPAGER='less --RAW-CONTROL-CHARS --LONG-PROMPT +Gg'
# -r, --raw-control-chars: output "raw" control characters.
# -R, --RAW-CONTROL-CHARS: same as -r but only for ANSI color escape sequences.
# -s, --squeeze-blank-lines: Squeeze multiple blank lines.
# -M, --LONG-PROMPT: prompt even more verbosely than more.
# +Gg: read till EOF then go back, to enable percentage and total line count

# Colorize bold and underline
# --use-color and -D were added to less in v576 (2021-02-04),
# See manc() for an older solution
if (( "$(less --version | awk '{print $2; exit}')" >= 576 )); then
	MANPAGER+=' --use-color --color=d+r --color=u+b'
	MANROFFOPT='-c'
fi

# Enable man/groff native colors (for pages that actually use colors)
# Might not be needed in Ubuntu 22.04. See /etc/groff/man.local and `man grotty`
# Test with `man git` and `GROFF_SGR=1 man git` (blue URL links)
# Breaks manc() if not used with GROFF_NO_SGR=1
export GROFF_SGR=1


# Python ----------------------------------------------------------------------

# Disabled, use `pip install --user -e` for local projects
#export PYTHONPATH=${PYTHONPATH:+${PYTHONPATH}:}:$HOME/work

# Enable all DeprecationWarnings. Default all disabled in Python 2.7, some in 3
# Disabled to keep default behavior, otherwise `pip` is very noisy
#export PYTHONWARNINGS=default

# Not needed for Python 3
#export PYTHONIOENCODING=UTF-8

# -----------------------------------------------------------------------------

# Debian Development
export DEBFULLNAME="Rodrigo Silva"
export DEBEMAIL="debian@rodrigosilva.com"

# Custom paths ----------------------------------------------------------------

export BASH_COMPLETION_USER_DIR=${SCRIPTS}/home/bash-completion
export SETEN_CONFIG=${XDG_CONFIG_HOME:-$HOME/.config}/setup/setup.conf
export DOSBOX_DRIVEC=/dados/Jogos/DOSBox

# Dotfiles in $HOME -----------------------------------------------------------

source <(snipfile "$SCRIPTS/home/bash_aliases_min" 'XDG defs')
source <(snipfile "$SCRIPTS/home/bash_aliases_min" 'XDG profile')
source <(snipfile "$SCRIPTS/home/bash_aliases_min" 'Cleanup')

# DWWW / sensible-browser -----------------------------------------------------

export BROWSER=firefox

# PyCharm ---------------------------------------------------------------------

# As PyCharm invokes ShellCheck without -x it never follows sourced files,
# triggering many SC2034 and related false positives. Workaround by forcing -x
# https://youtrack.jetbrains.com/issue/IDEA-219176
export SHELLCHECK_OPTS="-x"
