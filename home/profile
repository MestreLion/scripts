# Commands meant to run at every login
#
# To be sourced by ~/.profile
#
# To run, add these lines to ~/.profile:
#
#	export SCRIPTS="/path/to/scripts"
#	if [ -f "$SCRIPTS/home/profile" ] ; then
#	    . "$SCRIPTS/home/profile"
#	fi
#
# And edit "/path/to/scripts" to the proper path (by default ~/work/scripts)
# Dont forget to un-comment the lines too.
#
# Notes:
#
#  Bashisms are not allowed here, as /etc/gdm/Xession runs on sh (not bash!)
#  and sources ~/.profile at login.
#
#  SCRIPTS environment variable should be defined in ~/.profile instead of here.
#  respected here. If not, SCRIPTS will be set as either ~/work/scripts or
#  /home/dados/work/scripts, whichever exists.
#
##############################################################################

# Fallback only! Should be defined in ~/.profile instead.
export SCRIPTS=${SCRIPTS:-"$HOME"/work/scripts}

##############################################################################

# Prepend folders to $PATH, avoiding duplicates
# Parameters: a single string, ':' separated, cointaining the folders to add
# This function breaks the string and check each folder to avoid duplicates
# Note that folders will be prepended in the *reverse* order
prepend_path() { add_path "$1" "${2:-}"   ; }
append_path()  { add_path "$1" "${2:-}" 1 ; }
add_path() {
	# $1 = a single path
	# $2 = force add even if path does not exist (but not dupe entries)
	# $3 = append or prepend
	local SAVED_IFS=$IFS
	local folder
	IFS=:
	for folder in ${1:-} ; do
		if [ -z "${2:-}" ] && ! [ -d "$folder" ] ; then
			continue
		fi
		if ! $( echo "$PATH" | tr ":" "\n" | grep -qx "$folder" ) ; then
			if [ "${3:-}" ] ; then
				PATH=$PATH:$folder
			else
				PATH=$folder:$PATH
			fi
		fi
	done
	IFS=$SAVED_IFS
}

##############################################################################

# Add bins paths to PATH
# /usr/local/games is already set in /etc/environment and /etc/login.defs
# ~/.local/bin is set afterwards in ~/.profile
prepend_path "$SCRIPTS"  add_non_dir

# Add some projects
append_path "$HOME/work/git-tools:$HOME/work/wine-tools:$HOME/work/xdg-tools"

export PATH

# Thousand separator in ls filesizes
# could also use ls -l --block-size="'1" as alias
export LS_BLOCK_SIZE="'1"

# Locales
export LANG="en_US.utf8"
export LANGUAGE="en_US:en"
export LC_MESSAGES="en_US.utf8"
export LC_NUMERIC="pt_BR.utf8" # qt4 (and maybe others) unfortunately use this
export LC_TIME="pt_BR.utf8"
export LC_MONETARY="pt_BR.utf8"
export LC_PAPER="pt_BR.utf8"
export LC_MEASUREMENT="pt_BR.utf8"


# Python ----------------------------------------------------------------------

# Disabled, use `pip install --user -e` for local projects
#export PYTHONPATH=${PYTHONPATH:+${PYTHONPATH}:}:$HOME/work

# Enable all DeprecationWarnings. Default all disabled in Python 2.7, some in 3
# Disabled to keep default behavior, otherwise `pip` is very noisy
#export PYTHONWARNINGS=default

# Not needed for Python 3
#export PYTHONIOENCODING=UTF-8

# Not yet implemented on 3.8: https://bugs.python.org/issue29779
export PYTHONHISTORY=${XDG_CONFIG_HOME:-$HOME/.config}/python_history  # or /python/history

# IPython/Jupiter
# Both already used XDG_CONFIG_HOME for a while, then reverted :-(
# https://github.com/jupyter/notebook/issues/2374
# https://github.com/ipython/ipython/issues/48
export IPYTHONDIR=${XDG_CONFIG_HOME:-$HOME/.config}/ipython
export JUPYTER_CONFIG_DIR=${XDG_CONFIG_HOME:-$HOME/.config}/jupyter

# PyLint
# https://github.com/PyCQA/pylint/issues/1364
export PYLINTHOME=${XDG_CACHE_HOME:-$HOME/.cache}/pylint    # Default ~/.pylint.d/
export PYLINTRC=${XDG_CONFIG_HOME:-$HOME/.config}/pylintrc  # Default ~/.pylintrc

# Pipx
export PIPX_HOME=${XDG_DATA_HOME}/pipx  # Default ~/.local/pipx


# -----------------------------------------------------------------------------

# Debian Development
export DEBFULLNAME="Rodrigo Silva"
export DEBEMAIL="debian@rodrigosilva.com"


# Dotfiles in $HOME -----------------------------------------------------------

export GNUPGHOME=${XDG_CONFIG_HOME:-$HOME/.config}/gnupg


# DOSBox ----------------------------------------------------------------------

export DOSBOX_DRIVEC=/dados/Jogos/DOSBox


# DWWW / sensible-browser -----------------------------------------------------

export BROWSER=firefox


# SetEn -----------------------------------------------------------------------

export SETEN_CONFIG=${XDG_CONFIG_HOME:-$HOME/.config}/setup/setup.conf


# PyCharm ---------------------------------------------------------------------

# As PyCharm invokes ShellCheck without -x it never follows sourced files,
# triggering many SC2034 and related false positives. Workaround by forcing -x
# https://youtrack.jetbrains.com/issue/IDEA-219176
export SHELLCHECK_OPTS="-x"
