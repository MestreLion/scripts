# This is sourced by $SCRIPTS/home/bashrc after it sources $SCRIPTS/home/bash_completion

alias ls="ls --color=auto --group-directories-first -1"
alias ll="ls -l --time-style=long-iso"
alias la="ll -A"
alias cd..="cd .."
alias cd...="cd ../.."
alias cd....="cd ../../.."
alias cd.....="cd ../../../.."
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias path="echo \$PATH"
alias fstab="gksudo gedit /etc/fstab"
alias open="xdg-open"
alias trash="trash-put"
alias mand="dwww-man"
alias package="dpkg-www"
alias ca="CA.pl"
alias dd-progress="dd status=progress bs=1M iflag=count_bytes"
alias dd-nocache="dd-progress oflag=nocache,sync"
alias dfd='df -H -x tmpfs -x squashfs -x devtmpfs'
alias duh='du -sbh --si'
alias dud='lsblk --exclude 7'

#alias have="exists"

# SP  ' '  0x20 = · U+00B7 Middle Dot
# TAB '\t' 0x09 = ￫ U+FFEB Halfwidth Rightwards Arrow
# CR  '\r' 0x0D = § U+00A7 Section Sign (⏎ U+23CE also works fine)
# LF  '\n' 0x0A = ¶ U+00B6 Pilcrow Sign (was "Paragraph Sign")
alias whitespace="sed 's/ /·/g;s/\t/￫/g;s/\r/§/g;s/$/¶/g'"

complete-copy ls ll la
complete-copy dwww-man mand package

cdl()     { cd "$@" && ll ; }
md()      { mkdir "$@" && cd "${@: -1}" ; }
which()   { builtin type -P "$@" ; }
sprunge() { local l=${2-bash}; echo $(curl -sSF "sprunge=<${1:--}" http://sprunge.us)${l:+?$l}${3:+#n-$3}; }
epoch()   { date -d@"$1" ; }
now()     { date +%Y%m%d%H%M%S ; }

timestamp() {
	if [[ "${1:-}" ]]; then
		date +%s --date "$1"
	else
		date +%s
	fi
}

# Profiling:
# python3 -m cProfile -o myprog.profile ./myprog.py ...
#
# pip3 install --user gprof2dot
# gprof2dot -f pstats myprog.profile -o myprog.dot
# xdg-open myprog.dot  # requires GraphViz
#
# pip3 install --user snakeviz
# snakeviz myprog.profile  # outputs lots of errors, but URL provided works

pyprofile() {
	(($#)) || { echo "Usage: pyprofile <COMMAND> [ARGS...]" >&2; return 1; }
	python -m cProfile --sort=time "$@" |
	{ awk -v l=$((LINES-10)) '/ncalls  tottime/{t=l}t==1{exit}t>0{t--}{print}'
	cat - >/dev/null; }
}
pyprofile3() {
	(($#)) || { echo "Usage: pyprofile3 <COMMAND> [ARGS...]" >&2; return 1; }
	python3 -m cProfile --sort=time "$@" |
	{ awk -v l=$((LINES-10)) '/ncalls  tottime/{t=l}t==1{exit}t>0{t--}{print}'
	cat - >/dev/null; }
}

venv() {
	python3 -m venv "$@"
}

mkvenv() {
	local vdir=${1:-}
	local usage="Creates a Python Virtual Environment, activate it and upgrade its pip\nUsage: mkvenv ENV_DIR"
	if [[ "$vdir" =~ ^(|-h|--help)$ ]]; then echo -e "$usage" >&2; return 1; fi
	venv "$vdir" &&
	source "$vdir"/bin/activate &&
	PYTHONWARNINGS="ignore::DeprecationWarning" pip install --upgrade pip
}

activate-venv() {
	:
}

sri-hash() {
	if [[ -z "$1" ]]; then echo "Usage: sri-hash URL" >&2; return; fi
	echo -n "<script src=\"$1\" integrity=\"sha256-"
	curl -s4 "$1" |
	openssl dgst -sha256 -binary |
	openssl base64 -A
	echo '" crossorigin="anonymous"></script>'
}

cmdlist() { type -a "$1"; ll "$(type -P "$1")" ; }
cmdcat()  { cat  "$(type -P "$1")" ; }
cmdopen() { open "$(type -P "$1")" ; }
complete -c cmdlist cmdcat cmdopen

alias why='aptitude why'  # can also be 'apt cache rdepends --installed'

ubuntu-package() {
	open "http://packages.ubuntu.com/search?searchon=names&suite=all&section=all&keywords=$1"
}
complete -F _comp_pkg_names ubuntu-package why

compile() { gcc -Wall -Wextra -o "${1%.*}" "$@"; }

# 1337!
alias matrix='cmatrix -bsu8'

# Even more 1337!
matrix-fake() {
	tr -c "[:digit:]" " " < /dev/urandom |
	dd cbs=$COLUMNS conv=unblock |
	GREP_COLOR="1;32" grep --color "[^ ]"
}

dmesgw() { watch -n 0.25 "dmesg $@ | tail -n $((LINES-3))"; }

relpath() { python3 -c "import os,sys;print(os.path.relpath(*sys.argv[1:3]))" "$@"; }
mv-link() (  # any particular reason for this to be a subshell??? relpath() won't work!
	local newdir=$1
	local msg1="Move all symlinks from current dir to another path, and make them relative"
	local msg2="Usage: mv-link DESTDIR"
	[[ "$newdir" ]] || { printf '%s\n%s\n' "$msg1" "$msg2"; return 1; }
	while read -r link; do
		ln -s "$(relpath "$(readlink -n "$link")" "$newdir")" \
			"$newdir/$(basename "$link")" &&
		rm "$link"
	done < <(find "." -maxdepth 1 -type l)
)

# Minecraft
_minecraft_saverestore() {
	local src=$HOME/.minecraft/saves
	local dst=$HOME/install/minecraft/saves/minecraft-auto/saves
	local mode=${1:-save}
	if [[ "$mode" == "restore" ]]; then
		local tmp=$src
		src=$dst
		dst=$tmp
	fi
	[[ -d "$src" ]] || { echo "$src does not exist" >&2; return 1; }
	rm -rf   -- "$dst".bak     &&   # Delete destination backup, if exists
	mkdir -p -- "$dst"         &&   # Create destination
	mv       -- "$dst"{,.bak}  &&   # Backup destination
	cp -r    -- "$src" "${dst%/*}"  # Copy Source to Destination
}
minecraft-save()    { _minecraft_saverestore save;    }
minecraft-restore() { _minecraft_saverestore restore; }
