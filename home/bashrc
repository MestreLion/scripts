#!/bin/bash
#
# Commands meant to run at every shell
#
# To be sourced by ~/.bashrc
#
# To run, add these lines to ~/.bashrc:
#
#	if [ -f "$SCRIPTS/home/bashrc" ] ; then
#	    . "$SCRIPTS/home/bashrc"
#	fi
#

if [ -f "$SCRIPTS/home/bash_aliases" ] ; then
	source "$SCRIPTS/home/bash_aliases"
fi

if [ -d "$HOME/work/wine-tools" ] ; then
	PATH="$PATH:$HOME/work/wine-tools"
	source "$HOME/work/wine-tools/wine-tools-bashrc"
fi

declare -A termcolor
termcolor[RED]="\[\033[1;31m\]"    # $(tput bold; tput setaf 1)
termcolor[GREEN]="\[\033[1;32m\]"  # $(tput bold; tput setaf 2)
termcolor[BLUE]="\[\033[1;34m\]"   # $(tput bold; tput setaf 4)
termcolor[WHITE]="\[\033[1;37m\]"  # $(tput bold; tput setaf 7)
termcolor[RESET]="\[\033[00m\]"    # $(tput sgr0)

PS1="${termcolor[GREEN]}\u@\h ${termcolor[BLUE]}\w "\
"${termcolor[RED]}\$(git branch 2>/dev/null | grep '^*' | cut -c 3- | sed 's/.*/& /')"\
"${termcolor[BLUE]}\$${termcolor[RESET]} "

# Disable the dreaded history expansion for interactive sessions
# A.K.A 'why echo "Hello World!" do not work?'
set +o histexpand # same as set +H

relpath() { python -c "import os,sys;print os.path.relpath(*sys.argv[1:3])" "$@"; }
mv-link() (
	local newdir=$1
	local msg1="Move all symlinks from current dir to another path, and make them relative"
	local msg2="Usage: mv-link DESTDIR"
	[[ "$newdir" ]] || { printf '%s\n%s\n' "$msg1" "$msg2"; return 1; }
	while read -r link; do
		ln -s "$(relpath "$(readlink -n "$link")" "$newdir")" \
			"$newdir/$(basename "$link")" &&
		rm "$link"
	done < <(find "." -maxdepth 1 -type l)
)

# So cute!
type cowfortune >/dev/null 2>&1 && cowfortune
